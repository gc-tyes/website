{"ast":null,"code":"import _classCallCheck from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mkeohane/Documents/repositories/Tyes/website/src/components/testPage.js\";\nimport React, { Component } from 'react';\nimport Animation from '../images/animation.gif';\nimport Static from '../images/static.png';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\n\nvar TestPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestPage, _Component);\n\n  // basically just bring the animation program here\n  // get canvas through something like getById\n  // gotta make a constructor in order to do state\n  function TestPage(props) {\n    var _this;\n\n    _classCallCheck(this, TestPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestPage).call(this, props));\n    _this.state = {\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(TestPage, [{\n    key: \"render\",\n    value: function render() {\n      var spacingContainer = {\n        height: '40px'\n      };\n      var buttonStyle = {\n        height: '75px',\n        width: '425px'\n      };\n      var count = this.state.count;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        style: spacingContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container mx-auto text-center img-thumbnail shadow-lg p-3 mb-3 bg-white rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"display-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, count / 100.0)), React.createElement(\"div\", {\n        class: \"container mx-auto text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-outline-dark text-center btn-lg\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Begin Test\")), React.createElement(\"script\", {\n        src: \"animation.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    } // does something here then run render again\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.myInterval = setInterval(function () {\n        _this2.setState(function (prevState) {\n          return {\n            count: prevState.count + 1\n          };\n        });\n      }, 10);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.myInterval);\n    }\n  }]);\n\n  return TestPage;\n}(Component);\n\nexport default TestPage;","map":{"version":3,"sources":["/Users/mkeohane/Documents/repositories/Tyes/website/src/components/testPage.js"],"names":["React","Component","Animation","Static","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","TestPage","props","state","count","spacingContainer","height","buttonStyle","width","myInterval","setInterval","setState","prevState","clearInterval"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACIC,QADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,GALJ,EAMIC,OANJ,EAOIC,OAPJ,EAQIC,oBARJ,EASIC,cATJ,EAUIC,YAVJ,EAWIC,YAXJ,EAYIC,MAZJ,QAYkB,YAZlB;;IAcMC,Q;;;;;AACF;AACA;AACA;AACA,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFe;AAKhB;;;;6BAEM;AACL,UAAMC,gBAAgB,GAAG;AACrBC,QAAAA,MAAM,EAAE;AADa,OAAzB;AAGE,UAAMC,WAAW,GAAG;AAClBD,QAAAA,MAAM,EAAE,MADU;AAElBE,QAAAA,KAAK,EAAE;AAFW,OAApB;AAJG,UAQIJ,KARJ,GAQa,KAAKD,KARlB,CAQIC,KARJ;AASL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,WAAX;AAAuB,QAAA,KAAK,EAAEC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,KAAK,EAAC,iFAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBD,KAAK,GAAG,KAA/B,CADJ,CAFJ,EAKI;AAAK,QAAA,KAAK,EAAC,+BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,yCAA5B;AAAsE,QAAA,KAAK,EAAEG,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CALJ,EASI;AAAQ,QAAA,GAAG,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAaH,K,CAED;;;;wCACoB;AAAA;;AAChB,WAAKE,UAAL,GAAkBC,WAAW,CAAC,YAAI;AAC9B,QAAA,MAAI,CAACC,QAAL,CAAc,UAAAC,SAAS;AAAA,iBAAK;AACxBR,YAAAA,KAAK,EAAEQ,SAAS,CAACR,KAAV,GAAkB;AADD,WAAL;AAAA,SAAvB;AAGH,OAJ4B,EAI1B,EAJ0B,CAA7B;AAKH;;;2CAEsB;AACnBS,MAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;AACH;;;;EA9CkBvB,S;;AAiDvB,eAAee,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Animation from '../images/animation.gif';\nimport Static from '../images/static.png';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Button } from 'reactstrap';\n\nclass TestPage extends Component {\n    // basically just bring the animation program here\n    // get canvas through something like getById\n    // gotta make a constructor in order to do state\n    constructor(props) {\n        super(props);\n        this.state = {\n          count: 0\n        };\n      }\n\n    render() {\n        const spacingContainer = {\n            height: '40px'\n          };\n          const buttonStyle = {\n            height: '75px',\n            width: '425px'\n          }\n          const {count} = this.state;\n        return (\n            <div>\n                <div class=\"container\" style={spacingContainer}></div>\n                <div class=\"container mx-auto text-center img-thumbnail shadow-lg p-3 mb-3 bg-white rounded\">\n                    <h1 class=\"display-1\">{count / 100.0}</h1>\n                </div>\n                <div class=\"container mx-auto text-center\">\n                    <button type=\"button\" class=\"btn btn-outline-dark text-center btn-lg\" style={buttonStyle}>Begin Test</button>\n                </div>\n\n                <script src=\"animation.js\"></script>\n            </div>\n        )\n    }\n\n    // does something here then run render again\n    componentDidMount() {\n        this.myInterval = setInterval(()=>{\n            this.setState(prevState => ({\n                count: prevState.count + 1\n            }))\n        }, 10)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n}\n\nexport default TestPage;"]},"metadata":{},"sourceType":"module"}