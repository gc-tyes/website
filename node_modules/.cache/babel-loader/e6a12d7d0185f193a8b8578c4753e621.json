{"ast":null,"code":"import _classCallCheck from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport withNavigation from './withNavigation';\nvar EventNameToPropName = {\n  willFocus: 'onWillFocus',\n  didFocus: 'onDidFocus',\n  willBlur: 'onWillBlur',\n  didBlur: 'onDidBlur'\n};\nvar EventNames = Object.keys(EventNameToPropName);\n\nvar NavigationEvents =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NavigationEvents, _React$Component);\n\n  function NavigationEvents() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NavigationEvents);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NavigationEvents)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"getPropListener\", function (eventName) {\n      return _this.props[EventNameToPropName[eventName]];\n    });\n\n    return _this;\n  }\n\n  _createClass(NavigationEvents, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.subscriptions = {}; // We register all navigation listeners on mount to ensure listener stability across re-render\n      // A former implementation was replacing (removing/adding) listeners on all update (if prop provided)\n      // but there were issues (see https://github.com/react-navigation/react-navigation/issues/5058)\n\n      EventNames.forEach(function (eventName) {\n        _this2.subscriptions[eventName] = _this2.props.navigation.addListener(eventName, function () {\n          var propListener = _this2.getPropListener(eventName);\n\n          return propListener && propListener.apply(void 0, arguments);\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this3 = this;\n\n      EventNames.forEach(function (eventName) {\n        _this3.subscriptions[eventName].remove();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return NavigationEvents;\n}(React.Component);\n\nexport default withNavigation(NavigationEvents);","map":null,"metadata":{},"sourceType":"module"}