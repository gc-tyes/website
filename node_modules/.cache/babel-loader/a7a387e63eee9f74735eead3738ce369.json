{"ast":null,"code":"import _classCallCheck from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/mkeohane/Documents/repositories/Tyes/website/src/components/TestPage.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\nimport { db } from '../config.js';\nimport { NavigationEvents } from 'react-navigation';\n\nvar TestPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestPage, _Component);\n\n  // basically just bring the animation program here\n  // get canvas through something like getById\n  // gotta make a constructor in order to do state\n  function TestPage(props) {\n    var _this;\n\n    _classCallCheck(this, TestPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestPage).call(this, props));\n    _this.ref = db.ref('/Test/value');\n    _this.state = {\n      count: 3,\n      displayCount: \"Press \\\"Begin\\\" to get started\",\n      countdown: false,\n      running: false,\n      buttonText: \"Start\",\n      delay: 3\n    };\n    _this.beginTimer = _this.beginTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goToResults = _this.goToResults.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TestPage, [{\n    key: \"render\",\n    value: function render() {\n      var spacingContainer = {\n        height: '150px'\n      };\n      var buttonStyle = {\n        height: '75px',\n        width: '425px'\n      };\n      var center = {\n        marginleft: 'auto',\n        marginright: 'auto'\n      };\n      var mainContainer = {\n        height: '500px'\n      };\n      var count = this.state.count;\n      var displayCount = this.state.displayCount;\n      var beginTimer = this.beginTimer;\n      var buttonText = this.state.buttonText;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        style: spacingContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container text-center mx-auto img-thumbnail shadow-lg p-3 mb-3 bg-white rounded\",\n        style: mainContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: spacingContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        class: \"display-2\",\n        style: center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, displayCount)), React.createElement(\"div\", {\n        class: \"container mx-auto text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-outline-dark text-center btn-lg\",\n        style: buttonStyle,\n        onClick: beginTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, buttonText)), React.createElement(\"script\", {\n        src: \"animation.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"beginTimer\",\n    value: function beginTimer() {\n      var _this2 = this;\n\n      if (this.state.count == 3) {\n        this.setState(function () {\n          return {\n            countdown: true\n          };\n        });\n      }\n\n      this.setState(function () {\n        return {\n          running: !_this2.state.running\n        };\n      });\n\n      if (this.state.buttonText == \"Start\") {\n        this.setState(function () {\n          return {\n            buttonText: \"Stop\"\n          };\n        });\n      } else if (this.state.buttonText == \"Stop\") {\n        this.setState(function () {\n          return {\n            buttonText: \"Restart\",\n            countdown: false\n          };\n        });\n      } else {\n        this.setState(function () {\n          return {\n            buttonText: \"Stop\",\n            count: 3,\n            countdown: true\n          };\n        });\n      }\n    } // does something here then run render again\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var that = this;\n      db.ref('/Test').update({\n        value: \"hmmm\"\n      });\n      this.ref.on('value', function (snapshot) {\n        db.ref('/Test').update({\n          value: \"back to normal\"\n        });\n\n        if (that.state.running) {\n          that.setState(function () {\n            return {\n              running: false,\n              displayCount: \"Test complete! Your Time: \" + that.state.count / 100.0\n            };\n          });\n          that.goToResults();\n        }\n      });\n      this.firstInterval = setInterval(function () {\n        if (_this3.state.countdown && _this3.state.count != 0) {\n          _this3.setState(function (prevState) {\n            return {\n              count: prevState.count - 1,\n              displayCount: _this3.state.count\n            };\n          });\n        } else if (_this3.state.count == 0) {\n          _this3.setState({\n            countdown: false\n          });\n        }\n      }, 1000);\n      this.myInterval = setInterval(function () {\n        if (_this3.state.running && !_this3.state.countdown) {\n          _this3.setState(function (prevState) {\n            return {\n              count: prevState.count + 1,\n              displayCount: _this3.state.count / 100.0\n            };\n          });\n        }\n      }, 10);\n    }\n  }, {\n    key: \"goToResults\",\n    value: function goToResults() {\n      var _this4 = this;\n\n      this.delayInterval = setInterval(function () {\n        if (_this4.state.delay != 0) {\n          _this4.setState(function () {\n            return {\n              delay: _this4.state.delay - 1\n            };\n          });\n        } else {\n          _this4.setState(function () {\n            return {\n              displayCount: \"oof\"\n            };\n          });\n        }\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.myInterval);\n    }\n  }]);\n\n  return TestPage;\n}(Component);\n\nTestPage.navigationOptions = {\n  title: 'TestPage'\n};\nexport default TestPage;","map":{"version":3,"sources":["/Users/mkeohane/Documents/repositories/Tyes/website/src/components/TestPage.js"],"names":["React","Component","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","db","NavigationEvents","TestPage","props","ref","state","count","displayCount","countdown","running","buttonText","delay","beginTimer","bind","goToResults","spacingContainer","height","buttonStyle","width","center","marginleft","marginright","mainContainer","setState","that","update","value","on","snapshot","firstInterval","setInterval","prevState","myInterval","delayInterval","clearInterval","navigationOptions","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Button } from 'reactstrap';\nimport { db } from '../config.js';\nimport { NavigationEvents } from 'react-navigation';\n\nclass TestPage extends Component {\n    // basically just bring the animation program here\n    // get canvas through something like getById\n    // gotta make a constructor in order to do state\n    static navigationOptions = { \n        title: 'TestPage'\n    }\n    constructor(props) {\n        super(props);\n        this.ref = db.ref('/Test/value');\n        this.state = {\n          count: 3,\n          displayCount: \"Press \\\"Begin\\\" to get started\",\n          countdown: false,\n          running: false,\n          buttonText: \"Start\",\n          delay: 3\n        };\n        this.beginTimer = this.beginTimer.bind(this);\n        this.goToResults = this.goToResults.bind(this);\n      }\n\n    render() {\n        const spacingContainer = {\n            height: '150px'\n          };\n          const buttonStyle = {\n            height: '75px',\n            width: '425px'\n          }\n          const center = {\n            marginleft: 'auto',\n            marginright: 'auto',\n          }\n\n          const mainContainer = {\n              height: '500px'\n          }\n\n          const {count} = this.state;\n          const {displayCount} = this.state;\n          const beginTimer = this.beginTimer;\n          const {buttonText} = this.state;\n        return (\n            <div>\n                <div class=\"container\" style={spacingContainer}></div>\n                <div class=\"container text-center mx-auto img-thumbnail shadow-lg p-3 mb-3 bg-white rounded\" style={mainContainer}>\n                <div style={spacingContainer}></div>\n                    <h1 class=\"display-2\" style={center}>{displayCount}</h1>\n                </div>\n                <div class=\"container mx-auto text-center\">\n                    <button type=\"button\" class=\"btn btn-outline-dark text-center btn-lg\" style={buttonStyle} onClick={beginTimer}>{buttonText}</button>\n                </div>\n\n                <script src=\"animation.js\"></script>\n            </div>\n        )\n    }\n\n    beginTimer() {\n        if (this.state.count == 3) {\n            this.setState(() => ({\n                countdown: true\n            })) \n        }\n        this.setState(() => ({\n            running: !this.state.running\n        }))\n        if (this.state.buttonText == \"Start\") {\n            this.setState(() => ({\n                buttonText: \"Stop\"\n            }))\n        } else if (this.state.buttonText == \"Stop\") {\n            this.setState(() => ({\n                buttonText: \"Restart\",\n                countdown: false\n            }))\n        } else {\n            this.setState(() => ({\n                buttonText: \"Stop\",\n                count: 3,\n                countdown: true\n            }))\n        }\n    }\n\n    // does something here then run render again\n    componentDidMount() {\n        const that = this;\n        db.ref('/Test').update({\n            value: \"hmmm\"\n        });\n        this.ref.on('value', function(snapshot) {\n            db.ref('/Test').update({\n                value: \"back to normal\"\n            });\n            if (that.state.running) {\n                that.setState(() => ({\n                    running: false,\n                    displayCount: \"Test complete! Your Time: \" + (that.state.count / 100.0)\n                }));\n                that.goToResults();\n            }\n        });\n        this.firstInterval = setInterval(()=>{\n            if (this.state.countdown && this.state.count != 0) {\n                this.setState(prevState => ({\n                    count: prevState.count - 1,\n                    displayCount: this.state.count\n                }))\n            } else if (this.state.count == 0) {\n                this.setState({\n                    countdown: false\n                })\n            }\n        }, 1000)\n\n        this.myInterval = setInterval(()=>{\n            if (this.state.running && !this.state.countdown) {\n                this.setState(prevState => ({\n                    count: prevState.count + 1,\n                    displayCount: this.state.count / 100.0\n                }))\n            }\n        }, 10)\n    }\n\n    goToResults() {\n        this.delayInterval = setInterval(()=>{\n            if (this.state.delay != 0) {\n                this.setState(() => ({\n                    delay: this.state.delay - 1\n                }))\n            } else {\n                this.setState(() => ({\n                    displayCount: \"oof\"\n                }))\n            }\n        }, 1000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n}\n\nexport default TestPage;"]},"metadata":{},"sourceType":"module"}