{"ast":null,"code":"import _classCallCheck from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mkeohane/Documents/repositories/Tyes/website/src/components/testPage.js\";\nimport React, { Component } from 'react';\nimport Animation from '../images/animation.gif';\nimport Static from '../images/static.png';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\n\nvar TestPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestPage, _Component);\n\n  // basically just bring the animation program here\n  // get canvas through something like getById\n  // gotta make a constructor in order to do state\n  function TestPage(props) {\n    var _this;\n\n    _classCallCheck(this, TestPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestPage).call(this, props));\n    _this.state = {\n      count: 0,\n      displayCount: \"0\",\n      running: false\n    };\n    return _this;\n  }\n\n  _createClass(TestPage, [{\n    key: \"render\",\n    value: function render() {\n      var spacingContainer = {\n        height: '40px'\n      };\n      var buttonStyle = {\n        height: '75px',\n        width: '425px'\n      };\n      var center = {\n        marginleft: 'auto',\n        marginright: 'auto',\n        padding: '10px'\n      };\n      var count = this.state.count;\n      var displayCount = this.state.displayCount;\n      var beginTimer = this.beginTimer;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        style: spacingContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container mx-auto img-thumbnail shadow-lg p-3 mb-3 bg-white rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"display-1\",\n        style: center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, displayCount)), React.createElement(\"div\", {\n        class: \"container mx-auto text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-outline-dark text-center btn-lg\",\n        style: buttonStyle,\n        onClick: beginTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Begin Test\")), React.createElement(\"script\", {\n        src: \"animation.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"beginTimer\",\n    value: function beginTimer() {\n      this.setState(function () {\n        return {\n          running: true\n        };\n      });\n    } // does something here then run render again\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.myInterval = setInterval(function () {\n        if (_this2.state.running) {\n          _this2.setState(function (prevState) {\n            return {\n              count: prevState.count + 1,\n              displayCount: _this2.state.count / 100.0\n            };\n          });\n        }\n      }, 10);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.myInterval);\n    }\n  }]);\n\n  return TestPage;\n}(Component);\n\nexport default TestPage;","map":{"version":3,"sources":["/Users/mkeohane/Documents/repositories/Tyes/website/src/components/testPage.js"],"names":["React","Component","Animation","Static","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","TestPage","props","state","count","displayCount","running","spacingContainer","height","buttonStyle","width","center","marginleft","marginright","padding","beginTimer","setState","myInterval","setInterval","prevState","clearInterval"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACIC,QADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,GALJ,EAMIC,OANJ,EAOIC,OAPJ,EAQIC,oBARJ,EASIC,cATJ,EAUIC,YAVJ,EAWIC,YAXJ,EAYIC,MAZJ,QAYkB,YAZlB;;IAcMC,Q;;;;;AACF;AACA;AACA;AACA,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CADI;AAEXC,MAAAA,YAAY,EAAE,GAFH;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAFe;AAOhB;;;;6BAEM;AACL,UAAMC,gBAAgB,GAAG;AACrBC,QAAAA,MAAM,EAAE;AADa,OAAzB;AAGE,UAAMC,WAAW,GAAG;AAClBD,QAAAA,MAAM,EAAE,MADU;AAElBE,QAAAA,KAAK,EAAE;AAFW,OAApB;AAIA,UAAMC,MAAM,GAAG;AACbC,QAAAA,UAAU,EAAE,MADC;AAEbC,QAAAA,WAAW,EAAE,MAFA;AAGbC,QAAAA,OAAO,EAAE;AAHI,OAAf;AARG,UAeIV,KAfJ,GAea,KAAKD,KAflB,CAeIC,KAfJ;AAAA,UAgBIC,YAhBJ,GAgBoB,KAAKF,KAhBzB,CAgBIE,YAhBJ;AAiBH,UAAMU,UAAU,GAAG,KAAKA,UAAxB;AACF,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,WAAX;AAAuB,QAAA,KAAK,EAAER,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,KAAK,EAAC,qEAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,WAAV;AAAsB,QAAA,KAAK,EAAEI,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCN,YAAtC,CADJ,CAFJ,EAKI;AAAK,QAAA,KAAK,EAAC,+BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,yCAA5B;AAAsE,QAAA,KAAK,EAAEI,WAA7E;AAA0F,QAAA,OAAO,EAAEM,UAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CALJ,EASI;AAAQ,QAAA,GAAG,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAaH;;;iCAEY;AACT,WAAKC,QAAL,CAAc;AAAA,eAAO;AACjBV,UAAAA,OAAO,EAAE;AADQ,SAAP;AAAA,OAAd;AAGH,K,CAED;;;;wCACoB;AAAA;;AAChB,WAAKW,UAAL,GAAkBC,WAAW,CAAC,YAAI;AAC9B,YAAI,MAAI,CAACf,KAAL,CAAWG,OAAf,EAAwB;AACpB,UAAA,MAAI,CAACU,QAAL,CAAc,UAAAG,SAAS;AAAA,mBAAK;AACxBf,cAAAA,KAAK,EAAEe,SAAS,CAACf,KAAV,GAAkB,CADD;AAExBC,cAAAA,YAAY,EAAE,MAAI,CAACF,KAAL,CAAWC,KAAX,GAAmB;AAFT,aAAL;AAAA,WAAvB;AAIH;AACJ,OAP4B,EAO1B,EAP0B,CAA7B;AAQH;;;2CAEsB;AACnBgB,MAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACH;;;;EAlEkB/B,S;;AAqEvB,eAAee,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Animation from '../images/animation.gif';\nimport Static from '../images/static.png';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Button } from 'reactstrap';\n\nclass TestPage extends Component {\n    // basically just bring the animation program here\n    // get canvas through something like getById\n    // gotta make a constructor in order to do state\n    constructor(props) {\n        super(props);\n        this.state = {\n          count: 0,\n          displayCount: \"0\",\n          running: false\n        };\n      }\n\n    render() {\n        const spacingContainer = {\n            height: '40px'\n          };\n          const buttonStyle = {\n            height: '75px',\n            width: '425px'\n          }\n          const center = {\n            marginleft: 'auto',\n            marginright: 'auto',\n            padding: '10px'\n            \n          }\n\n          const {count} = this.state;\n          const {displayCount} = this.state;\n          const beginTimer = this.beginTimer;\n        return (\n            <div>\n                <div class=\"container\" style={spacingContainer}></div>\n                <div class=\"container mx-auto img-thumbnail shadow-lg p-3 mb-3 bg-white rounded\">\n                    <h1 class=\"display-1\" style={center}>{displayCount}</h1>\n                </div>\n                <div class=\"container mx-auto text-center\">\n                    <button type=\"button\" class=\"btn btn-outline-dark text-center btn-lg\" style={buttonStyle} onClick={beginTimer}>Begin Test</button>\n                </div>\n\n                <script src=\"animation.js\"></script>\n            </div>\n        )\n    }\n\n    beginTimer() {\n        this.setState(() => ({\n            running: true\n        }))\n    }\n\n    // does something here then run render again\n    componentDidMount() {\n        this.myInterval = setInterval(()=>{\n            if (this.state.running) {\n                this.setState(prevState => ({\n                    count: prevState.count + 1,\n                    displayCount: this.state.count / 100.0\n                }))\n            }\n        }, 10)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval)\n    }\n}\n\nexport default TestPage;"]},"metadata":{},"sourceType":"module"}