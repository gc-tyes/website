{"ast":null,"code":"import _classCallCheck from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mkeohane/Documents/repositories/Tyes/website/src/components/testPage.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\n\nvar TestPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestPage, _Component);\n\n  // basically just bring the animation program here\n  // get canvas through something like getById\n  // gotta make a constructor in order to do state\n  function TestPage(props) {\n    var _this;\n\n    _classCallCheck(this, TestPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestPage).call(this, props));\n    _this.state = {\n      isOpen: false,\n      holes: [],\n      intervals: [20, 20, 20, 20, 20, 20, 20, 20, 20],\n      counter: 0,\n      index: 0,\n      stopped: true,\n      once: false,\n      numPegs: 9\n    };\n    return _this;\n  }\n\n  _createClass(TestPage, [{\n    key: \"tick\",\n    value: function tick() {\n      if (!this.state.stopped) {\n        this.drawHoles();\n        this.setState({\n          counter: this.state.counter + 1\n        });\n\n        if (this.state.index < this.state.intervals.length && this.state.counter == this.state.intervals[this.state.index] - 10 && !this.state.once) {\n          this.setState({\n            numPegs: this.state.numPegs - 1\n          });\n        } else if (index < intervals.length && counter == intervals[index]) {\n          this.setState({\n            counter: 0,\n            numPegs: this.state.numPegs + 1\n          });\n        }\n\n        if (index < intervals.length && counter == intervals[index] - 5) {\n          holes[index].changeColor();\n          index++;\n\n          if (!once) {\n            this.setState({\n              counter: 0\n            });\n          }\n        } else if (index >= intervals.length && !once) {\n          index = 0;\n          counter = 0;\n          once = true;\n        } else if (index >= intervals.length) {\n          stopped = true;\n          numPegs++;\n          drawHoles();\n        }\n\n        console.log(this.state.counter);\n      }\n    }\n  }, {\n    key: \"drawHoles\",\n    value: function drawHoles() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // DRAW OUTLINE\n\n      ctx.fillStyle = \"black\";\n      ctx.rect(5, 5, 500, 500);\n      ctx.stroke(); // DRAW WELL AND NUMBER\n\n      ctx.beginPath();\n      ctx.arc(250, 400, 75, 0, 2 * Math.PI);\n      ctx.stroke();\n      ctx.font = \"28px Arial\";\n      ctx.fillStyle = \"black\";\n      ctx.fillText(numPegs + \"\", 245, 410);\n      ctx.closePath(); // DRAW HOLES\n\n      holes.forEach(function (element) {\n        ctx.beginPath();\n        ctx.fillStyle = element.color;\n        ctx.arc(element.x, element.y, 25, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.closePath();\n      });\n    }\n  }, {\n    key: \"createHoles\",\n    value: function createHoles() {\n      var x = 100;\n      var y = 50;\n\n      for (var i = 0; i < 3; i++) {\n        x = 100;\n\n        for (var j = 0; j < 3; j++) {\n          holes.push({\n            x: x,\n            y: y,\n            color: \"red\",\n            changeColor: function changeColor() {\n              if (this.color == \"red\") {\n                this.color = \"green\";\n              } else {\n                this.color = \"red\";\n              }\n            }\n          });\n          x += 150;\n        }\n\n        y += 100;\n      }\n\n      drawHoles();\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      this.setState({\n        stopped: false\n      });\n      this.intervalHandle = setInterval(this.tick, 1000);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen,\n        holes: [],\n        intervals: [20, 20, 20, 20, 20, 20, 20, 20, 20],\n        counter: 0,\n        index: 0,\n        stopped: true,\n        once: false,\n        numPegs: 9\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var spacingContainer = {\n        height: '40px'\n      };\n      var buttonStyle = {\n        height: '150px',\n        width: '400px'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        style: spacingContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container mx-auto text-center img-thumbnail shadow-lg p-3 mb-5 bg-white rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"myCanvas\",\n        width: \"510\",\n        height: \"510\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"container mx-auto text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-outline-dark text-center btn-lg\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Begin Test\")), React.createElement(\"script\", {\n        src: \"animation.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TestPage;\n}(Component);\n\nexport default TestPage;","map":{"version":3,"sources":["/Users/mkeohane/Documents/repositories/Tyes/website/src/components/testPage.js"],"names":["React","Component","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","TestPage","props","state","isOpen","holes","intervals","counter","index","stopped","once","numPegs","drawHoles","setState","length","changeColor","console","log","ctx","clearRect","canvas","width","height","fillStyle","rect","stroke","beginPath","arc","Math","PI","font","fillText","closePath","forEach","element","color","x","y","fill","i","j","push","intervalHandle","setInterval","tick","spacingContainer","buttonStyle"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Button } from 'reactstrap';\n\nclass TestPage extends Component {\n    // basically just bring the animation program here\n    // get canvas through something like getById\n    // gotta make a constructor in order to do state\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          isOpen: false,\n          holes: [],\n          intervals: [20,20,20,20,20,20,20,20,20],\n          counter: 0,\n          index: 0,\n          stopped: true,\n          once: false,\n          numPegs: 9\n        };\n      }\n\n    tick() {\n        if (!this.state.stopped) {\n            this.drawHoles();\n        this.setState({\n            counter: this.state.counter + 1\n        })\n        if (this.state.index < this.state.intervals.length && this.state.counter == this.state.intervals[this.state.index] - 10 && !this.state.once) {\n            this.setState({\n                numPegs: this.state.numPegs - 1\n            })\n        } else if (index < intervals.length && counter == intervals[index]) {\n            this.setState({\n                counter: 0,\n                numPegs: this.state.numPegs + 1\n            })\n        }\n    \n        if (index < intervals.length && counter == intervals[index] - 5) {\n            holes[index].changeColor();\n            index++;\n            if (!once) {\n                this.setState({\n                    counter: 0,\n                })\n            }\n        } else if (index >= intervals.length && !once) {\n            index = 0;\n            counter = 0;\n            once = true;\n        } else if (index >= intervals.length) {\n            stopped = true;\n            numPegs++;\n            drawHoles();\n        }\n        console.log(this.state.counter);\n        }\n    }\n\n    drawHoles() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // DRAW OUTLINE\n        ctx.fillStyle = \"black\";\n        ctx.rect(5,5,500,500);\n        ctx.stroke();\n        // DRAW WELL AND NUMBER\n        ctx.beginPath();\n        ctx.arc(250, 400, 75, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.font = \"28px Arial\";\n        ctx.fillStyle = \"black\"\n        ctx.fillText(numPegs + \"\", 245, 410)\n        ctx.closePath();\n        // DRAW HOLES\n        holes.forEach(element => {\n            ctx.beginPath();\n            ctx.fillStyle = element.color;\n            ctx.arc(element.x, element.y, 25, 0, 2 * Math.PI);\n            ctx.fill();\n            ctx.closePath();\n        });\n    }\n\n    createHoles() {\n        var x = 100;\n        var y = 50;\n        for (var i = 0; i < 3; i++) {\n            x = 100;\n            for (var j = 0; j < 3; j++) {\n                holes.push({x: x, y: y, color: \"red\", changeColor: function() {\n                    if (this.color == \"red\") {\n                        this.color = \"green\";\n                    } else {\n                        this.color = \"red\";\n                    }\n                }\n            });\n            x += 150;\n            }\n            y += 100;\n        }\n        drawHoles();\n    }\n    \n    begin() {\n        this.setState({\n            stopped: false\n        })\n        this.intervalHandle = setInterval(this.tick, 1000);\n    }\n      \n      toggle() {\n        this.setState({\n          isOpen: !this.state.isOpen,\n          holes: [],\n          intervals: [20,20,20,20,20,20,20,20,20],\n          counter: 0,\n          index: 0,\n          stopped: true,\n          once: false,\n          numPegs: 9\n        });\n      }\n\n    render() {\n        const spacingContainer = {\n            height: '40px'\n          };\n          const buttonStyle = {\n            height: '150px',\n            width: '400px'\n          }\n        return (\n            <div>\n                <div class=\"container\" style={spacingContainer}></div>\n                <div class=\"container mx-auto text-center img-thumbnail shadow-lg p-3 mb-5 bg-white rounded\">\n                    <canvas id=\"myCanvas\" width=\"510\" height=\"510\"></canvas>\n                </div>\n                <div class=\"container mx-auto text-center\">\n                    <button type=\"button\" class=\"btn btn-outline-dark text-center btn-lg\" style={buttonStyle}>Begin Test</button>\n                </div>\n\n                <script src=\"animation.js\"></script>\n            </div>\n        )\n    }\n}\n\nexport default TestPage;"]},"metadata":{},"sourceType":"module"}