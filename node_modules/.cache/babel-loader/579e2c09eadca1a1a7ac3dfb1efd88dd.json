{"ast":null,"code":"import _classCallCheck from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mkeohane/Documents/repositories/Tyes/website/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mkeohane/Documents/repositories/Tyes/website/src/components/testPage.js\";\nimport React, { Component } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from 'reactstrap';\n\nvar TestPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TestPage, _Component);\n\n  // basically just bring the animation program here\n  // get canvas through something like getById\n  // gotta make a constructor in order to do state\n  function TestPage(props) {\n    var _this;\n\n    _classCallCheck(this, TestPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TestPage).call(this, props));\n    _this.state = {\n      isOpen: false,\n      holes: [],\n      intervals: [20, 20, 20, 20, 20, 20, 20, 20, 20],\n      counter: 0,\n      index: 0,\n      stopped: true,\n      once: false,\n      numPegs: 9,\n      canvas: _this.refs.canvas,\n      ctx: canvas.getContext(\"2d\")\n    };\n    return _this;\n  }\n\n  _createClass(TestPage, [{\n    key: \"tick\",\n    value: function tick() {\n      if (!this.state.stopped) {\n        this.drawHoles();\n        this.setState({\n          counter: this.state.counter + 1\n        });\n\n        if (this.state.index < this.state.intervals.length && this.state.counter == this.state.intervals[this.state.index] - 10 && !this.state.once) {\n          this.setState({\n            numPegs: this.state.numPegs - 1\n          });\n        } else if (this.state.index < this.state.intervals.length && this.state.counter == this.state.intervals[this.state.index]) {\n          this.setState({\n            counter: 0,\n            numPegs: this.state.numPegs + 1\n          });\n        }\n\n        if (this.state.index < this.state.intervals.length && this.state.counter == this.state.intervals[this.state.index] - 5) {\n          this.state.holes[this.state.index].changeColor();\n          this.setState({\n            index: this.state.index + 1\n          });\n\n          if (!this.state.once) {\n            this.setState({\n              counter: 0\n            });\n          }\n        } else if (this.state.index >= this.state.intervals.length && !this.state.once) {\n          this.setState({\n            counter: 0,\n            index: 0,\n            once: false\n          });\n        } else if (this.state.index >= this.state.intervals.length) {\n          this.setState({\n            numPegs: this.state.numPegs + 1,\n            stopped: true\n          });\n          this.drawHoles();\n        }\n\n        console.log(this.state.counter);\n      }\n    }\n  }, {\n    key: \"drawHoles\",\n    value: function drawHoles() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // DRAW OUTLINE\n\n      ctx.fillStyle = \"black\";\n      ctx.rect(5, 5, 500, 500);\n      ctx.stroke(); // DRAW WELL AND NUMBER\n\n      ctx.beginPath();\n      ctx.arc(250, 400, 75, 0, 2 * Math.PI);\n      ctx.stroke();\n      ctx.font = \"28px Arial\";\n      ctx.fillStyle = \"black\";\n      ctx.fillText(numPegs + \"\", 245, 410);\n      ctx.closePath(); // DRAW HOLES\n\n      holes.forEach(function (element) {\n        ctx.beginPath();\n        ctx.fillStyle = element.color;\n        ctx.arc(element.x, element.y, 25, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.closePath();\n      });\n    }\n  }, {\n    key: \"createHoles\",\n    value: function createHoles() {\n      var x = 100;\n      var y = 50;\n\n      for (var i = 0; i < 3; i++) {\n        x = 100;\n\n        for (var j = 0; j < 3; j++) {\n          holes.push({\n            x: x,\n            y: y,\n            color: \"red\",\n            changeColor: function changeColor() {\n              if (this.color == \"red\") {\n                this.color = \"green\";\n              } else {\n                this.color = \"red\";\n              }\n            }\n          });\n          x += 150;\n        }\n\n        y += 100;\n      }\n\n      drawHoles();\n    }\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      this.setState({\n        stopped: false\n      });\n      this.intervalHandle = setInterval(this.tick, 1000);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen,\n        holes: [],\n        intervals: [20, 20, 20, 20, 20, 20, 20, 20, 20],\n        counter: 0,\n        index: 0,\n        stopped: true,\n        once: false,\n        numPegs: 9\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var spacingContainer = {\n        height: '40px'\n      };\n      var buttonStyle = {\n        height: '150px',\n        width: '400px'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        style: spacingContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"container mx-auto text-center img-thumbnail shadow-lg p-3 mb-5 bg-white rounded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"myCanvas\",\n        width: \"510\",\n        height: \"510\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"container mx-auto text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-outline-dark text-center btn-lg\",\n        style: buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Begin Test\")), React.createElement(\"script\", {\n        src: \"animation.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TestPage;\n}(Component);\n\nexport default TestPage;","map":{"version":3,"sources":["/Users/mkeohane/Documents/repositories/Tyes/website/src/components/testPage.js"],"names":["React","Component","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","TestPage","props","state","isOpen","holes","intervals","counter","index","stopped","once","numPegs","canvas","refs","ctx","getContext","drawHoles","setState","length","changeColor","console","log","clearRect","width","height","fillStyle","rect","stroke","beginPath","arc","Math","PI","font","fillText","closePath","forEach","element","color","x","y","fill","i","j","push","intervalHandle","setInterval","tick","spacingContainer","buttonStyle"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Button } from 'reactstrap';\n\nclass TestPage extends Component {\n    // basically just bring the animation program here\n    // get canvas through something like getById\n    // gotta make a constructor in order to do state\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          isOpen: false,\n          holes: [],\n          intervals: [20,20,20,20,20,20,20,20,20],\n          counter: 0,\n          index: 0,\n          stopped: true,\n          once: false,\n          numPegs: 9,\n          canvas: this.refs.canvas,\n          ctx: canvas.getContext(\"2d\")\n        };\n      }\n\n    tick() {\n        if (!this.state.stopped) {\n            this.drawHoles();\n        this.setState({\n            counter: this.state.counter + 1\n        })\n        if (this.state.index < this.state.intervals.length && this.state.counter == this.state.intervals[this.state.index] - 10 && !this.state.once) {\n            this.setState({\n                numPegs: this.state.numPegs - 1\n            })\n        } else if (this.state.index < this.state.intervals.length && this.state.counter == this.state.intervals[this.state.index]) {\n            this.setState({\n                counter: 0,\n                numPegs: this.state.numPegs + 1\n            })\n        }\n    \n        if (this.state.index < this.state.intervals.length && this.state.counter == this.state.intervals[this.state.index] - 5) {\n            this.state.holes[this.state.index].changeColor();\n            this.setState({\n                index: this.state.index + 1\n            })\n            if (!this.state.once) {\n                this.setState({\n                    counter: 0,\n                })\n            }\n        } else if (this.state.index >= this.state.intervals.length && !this.state.once) {\n            this.setState({\n                counter: 0,\n                index: 0,\n                once: false\n            })\n        } else if (this.state.index >= this.state.intervals.length) {\n            this.setState({\n                numPegs: this.state.numPegs + 1,\n                stopped: true\n            })\n            this.drawHoles();\n        }\n        console.log(this.state.counter);\n        }\n    }\n\n    drawHoles() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // DRAW OUTLINE\n        ctx.fillStyle = \"black\";\n        ctx.rect(5,5,500,500);\n        ctx.stroke();\n        // DRAW WELL AND NUMBER\n        ctx.beginPath();\n        ctx.arc(250, 400, 75, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.font = \"28px Arial\";\n        ctx.fillStyle = \"black\"\n        ctx.fillText(numPegs + \"\", 245, 410)\n        ctx.closePath();\n        // DRAW HOLES\n        holes.forEach(element => {\n            ctx.beginPath();\n            ctx.fillStyle = element.color;\n            ctx.arc(element.x, element.y, 25, 0, 2 * Math.PI);\n            ctx.fill();\n            ctx.closePath();\n        });\n    }\n\n    createHoles() {\n        var x = 100;\n        var y = 50;\n        for (var i = 0; i < 3; i++) {\n            x = 100;\n            for (var j = 0; j < 3; j++) {\n                holes.push({x: x, y: y, color: \"red\", changeColor: function() {\n                    if (this.color == \"red\") {\n                        this.color = \"green\";\n                    } else {\n                        this.color = \"red\";\n                    }\n                }\n            });\n            x += 150;\n            }\n            y += 100;\n        }\n        drawHoles();\n    }\n    \n    begin() {\n        this.setState({\n            stopped: false\n        })\n        this.intervalHandle = setInterval(this.tick, 1000);\n    }\n      \n      toggle() {\n        this.setState({\n          isOpen: !this.state.isOpen,\n          holes: [],\n          intervals: [20,20,20,20,20,20,20,20,20],\n          counter: 0,\n          index: 0,\n          stopped: true,\n          once: false,\n          numPegs: 9\n        });\n      }\n\n    render() {\n        const spacingContainer = {\n            height: '40px'\n          };\n          const buttonStyle = {\n            height: '150px',\n            width: '400px'\n          }\n        return (\n            <div>\n                <div class=\"container\" style={spacingContainer}></div>\n                <div class=\"container mx-auto text-center img-thumbnail shadow-lg p-3 mb-5 bg-white rounded\">\n                    <canvas id=\"myCanvas\" width=\"510\" height=\"510\"></canvas>\n                </div>\n                <div class=\"container mx-auto text-center\">\n                    <button type=\"button\" class=\"btn btn-outline-dark text-center btn-lg\" style={buttonStyle}>Begin Test</button>\n                </div>\n\n                <script src=\"animation.js\"></script>\n            </div>\n        )\n    }\n}\n\nexport default TestPage;"]},"metadata":{},"sourceType":"module"}